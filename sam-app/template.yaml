AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app
  
  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: go1.x
    Timeout: 30

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: hello-world
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaGoSampleRole"
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: GET
            RestApiId: !Ref ApiGateway
        # VpcCatchAll:
        #   Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
        #   Properties:
        #     Path: /hello
        #     Method: GET
        #     RestApiId: !Ref VpcApiGateway
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
  UserFetcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user-fetcher/
      Handler: user-fetcher
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaGoSampleRole"
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /users
            Method: GET
            RestApiId: !Ref ApiGateway
  UserRegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user-register/
      Handler: user-register
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaGoSampleRole"
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /users
            Method: POST
            RestApiId: !Ref ApiGateway
  UserDestroyerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user-destroyer/
      Handler: user-destroyer
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaGoSampleRole"
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /users/{name}/{age}
            Method: DELETE
            RestApiId: !Ref ApiGateway

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      EndpointConfiguration: REGIONAL
      StageName: Prod
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: swagger.yaml
  # VpcApiGateway:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     EndpointConfiguration: PRIVATE
  #     StageName: Prod
  #     DefinitionBody:
  #       'Fn::Transform':
  #         Name: 'AWS::Include'
  #         Parameters:
  #           Location: swagger.yaml
